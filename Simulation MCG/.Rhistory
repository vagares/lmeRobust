zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,center = AVEbetaMLE,cov = AVEvarbetaMLE)
}
}
plot(MLESMM$MLE$beta[,1],MLESMM$MLE$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col="orange",lwd=2)
points(250,10,pch=16,col="orange")
zbetaEmpirical
plot(MLESMM$S$beta[,1],MLESMM$S$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
points(250,10,pch=16,col="orange")
plot(MLESMM$S$beta[,1],MLESMM$S$beta[,2],
xlab="Beta 1",ylab="Beta 2",pch="",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
point(MLESMM$S$beta[m,1],MLESMM$S$beta[m,2])
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
points(MLESMM$S$beta[m,1],MLESMM$S$beta[m,2])
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
plot(MLESMM$S$beta[,1],MLESMM$S$beta[,2],
xlab="Beta 1",ylab="Beta 2",pch="",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
points(MLESMM$S$beta[m,1],MLESMM$S$beta[m,2])
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
plot(MLESMM$S$beta[,1],MLESMM$S$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
points(250,10,pch=16,col="orange")
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
points(MLESMM$S$beta[m,1],MLESMM$S$beta[m,2])
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
plotbeta1
plottheta1
mle_ci=CI_MLESMMtheta[(CI_MLESMMtheta$Estimator=="MLE")&
CI_MLESMMtheta$pe=="02",]
s_ci=CI_MLESMMtheta[(CI_MLESMMtheta$Estimator=="S")&
CI_MLESMMtheta$pe=="02",]
xmin=min(mle_ci$lwbtheta1,s_ci$lwbtheta1)
xmax=max(mle_ci$upbtheta1,s_ci$upbtheta1)
par(mfrow=c(1,2))
plot(theta0[1],0,ylim=c(0,250),xlim=c(xmin,xmax),pch=".")
for (m in 1:nrep){
segments(mle_ci$lwbtheta1[m],m,mle_ci$upbtheta1[m],m)
}
abline(v=theta0[1],col=2)
plot(theta0[1],0,ylim=c(0,250),xlim=c(xmin,xmax),pch=".")
for (m in 1:nrep){
segments(s_ci$lwbtheta1[m],m,s_ci$upbtheta1[m],m)
}
abline(v=theta0[1],col=2)
par(mfrow=c(1,1))
CP_MLESMMtheta[CP_MLESMMtheta$pe=="02",]
mean(mle_ci$upbtheta1-mle_ci$lwbtheta1)
mean(s_ci$upbtheta1-s_ci$lwbtheta1)
mean(mle_ci$upbtheta1+mle_ci$lwbtheta1)/2
mean(s_ci$upbtheta1+s_ci$lwbtheta1)/2
ggplot(boxplotMLESMMbeta,aes(x=beta1,y=beta2,color=Estimator))+
geom_point(size=0.4)+
geom_hline(yintercept = 10,lty=3)+
geom_vline(xintercept = 250,lty=3)+
facet_wrap(~pe)
plottheta1
plottheta2
plottheta3
plottheta4
plottheta1
ggplot(boxplotMLESMMtheta,aes(x=theta1,y=theta2,color=Estimator))+
geom_point(size=0.4)+
geom_hline(yintercept = 10,lty=3)+
geom_vline(xintercept = 250,lty=3)+
facet_wrap(~pe)
theta0[1]
ggplot(boxplotMLESMMtheta,aes(x=theta1,y=theta2,color=Estimator))+
geom_point(size=0.4)+
geom_hline(yintercept = theta0[1],lty=3)+
geom_vline(xintercept = theta0[2],lty=3)+
facet_wrap(~pe)
boxplotMLESMMtheta
theta0[1]
theta0[2]
ggplot(boxplotMLESMMtheta,aes(x=theta1,y=theta2,color=Estimator))+
geom_point(size=0.4)+
geom_hline(yintercept = theta0[1],lty=3)+
geom_vline(xintercept = theta0[2],lty=3)+
facet_wrap(~pe)
ggplot(boxplotMLESMMtheta,aes(x=theta1,y=theta2,color=Estimator))+
geom_point(size=0.4)+
geom_hline(yintercept = theta0[2],lty=3)+
geom_vline(xintercept = theta0[1],lty=3)+
facet_wrap(~pe)
ggplot(boxplotMLESMMtheta,aes(x=theta1,y=theta2,color=Estimator))+
geom_point(size=0.5)+
geom_hline(yintercept = theta0[2],lty=3)+
geom_vline(xintercept = theta0[1],lty=3)+
facet_wrap(~pe)
summaryMLE$fixedeffectsS
dat$Y
summaryMLE = Roblme(dat$Y,dat$X,dat$Z,E=NULL,L=dat$L,
rho="MLE",rhoMM=NULL,eps=1e-5,maxiter=100,eff=0.95,V0=NULL)
summaryMLE$fixedeffectsS
summaryMLE$summarythetaS
summaryS = Roblme(dat$Y,dat$X,dat$Z,E=NULL,L=dat$L,
rho="biweight",rhoMM=NULL,eps=1e-5,maxiter=100,eff=0.95,V0=NULL)
summaryS$fixedeffectsS[,1]
summaryS$summarythetaS[,1]
summaryS$varbetaShat
summaryMLE$fixedeffectsS[,1]
summaryMLE$summarythetaS[,1]
plot(MLESMM$S$beta[,1],MLESMM$S$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
points(MLESMM$S$beta[m,1],MLESMM$S$beta[m,2])
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
AVEbetaMLE=apply(MLESMM$MLE$beta,MARGIN=2,FUN=mean)
AVEvarbetaMLE=Reduce('+',MLESMM$MLE$varbeta)/nrep
qbeta1=seq(qnorm(0.001,mean=beta0[1],sd=sqrt(AVEvarbetaMLE[1,1])),
qnorm(0.999,mean=beta0[1],sd=sqrt(AVEvarbetaMLE[1,1])),
length=100)
qbeta2=seq(qnorm(0.001,mean=beta0[2],sd=sqrt(AVEvarbetaMLE[2,2]/n)),
qnorm(0.999,mean=beta0[2],sd=sqrt(AVEvarbetaMLE[2,2]/n)),
length=100)
xmin=min(qbeta1,MLESMM$MLE$beta[,1])
xmax=max(qbeta1,MLESMM$MLE$beta[,1])
ymin=min(qbeta2,MLESMM$MLE$beta[,2])
ymax=max(qbeta2,MLESMM$MLE$beta[,2])
beta1=seq(xmin,xmax,length=100)
beta2=seq(ymin,ymax,length=100)
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,center = AVEbetaMLE,cov = AVEvarbetaMLE)
}
}
plot(MLESMM$MLE$beta[,1],MLESMM$MLE$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col="orange",lwd=2)
points(250,10,pch=16,col="orange")
#############
plot(MLESMM$S$beta[,1],MLESMM$S$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
for (m in (1:nrep)){
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
points(MLESMM$S$beta[m,1],MLESMM$S$beta[m,2])
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,
center = MLESMM$S$beta[m,],
cov = MLESMM$S$varbeta[[m]])
}
}
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col=1)
print(m)
}
summaryMLE$summarythetaS[,1]
summaryMLE$fixedeffectsS[,1]
summaryMLE$varbetaShat
summaryS$varbetaShat
summaryMLE$varbetaShat
summaryS$varbetaShat
dat$X
dat$X[[1]]
X=dat$X[[1]]
beta0
X=dat$X[[1]]
theta0
x1 = rep(1,k)       # first column of design matrix X
x2 = seq(0,k-1,1)   # second column of design matrix X
Zmat = cbind(x1,x2) # design matrix Z of vector of random effects
Zmat
Sigma1=matrix(c(1,0,0,0),ncol=2)  # corresponds to var(b1)
Sigma2=matrix(c(0,1,1,0),ncol=2)  # corresponds to covar(b1,b2)
Sigma3=matrix(c(0,0,0,1),ncol=2)  # corresponds to var(b2)
L1=Zmat%*%Sigma1%*%t(Zmat)          # term in V from var(b1)
L2=Zmat%*%Sigma2%*%t(Zmat)          # term in V from covar(b1,b2)
L3=Zmat%*%Sigma3%*%t(Zmat)          # term in V from var(b21)
L4=diag(1,k)                        # term in V from var(epsilon)
Vtheta=theta0[1]*L1+theta0[2]*L2+theta0[3]*L3+theta0[4]*L4
vec(L1)
L=cbind(vec(L1),vec(L2),vec(L3),vec(L4))
k
c0
varbeta=constbetahat(k,c0)*
solve(t(X)%*%solve(Vtheta)%*%X)
varbeta
varbetaCopt=constbetahat(k,c0)*
solve(t(X)%*%X) %*% t(X) %*% Vtheta %*% X %*% solve(t(X)%*%X)
varbetaCopt
Vtheta=theta0[1]*L1+theta0[2]*L2+theta0[4]*L4
L=cbind(vec(L1),vec(L2),vec(L4))
varbeta=constbetahat(k,c0)*
solve(t(X)%*%solve(Vtheta)%*%X)
varbetaCopt=constbetahat(k,c0)*
solve(t(X)%*%X) %*% t(X) %*% Vtheta %*% X %*% solve(t(X)%*%X)
varbeta
varbetaCopt
n
varbeta/200
Vtheta=theta0[1]*L1+theta0[3]*L3+theta0[4]*L4
L=cbind(vec(L1),vec(L3),vec(L4))
varbeta=constbetahat(k,c0)*
solve(t(X)%*%solve(Vtheta)%*%X)
varbetaCopt=constbetahat(k,c0)*
solve(t(X)%*%X) %*% t(X) %*% Vtheta %*% X %*% solve(t(X)%*%X)
varbeta/200
theta0[1]*L1+theta0[3]*L3
Zmat%*%t(Zmat)
theta0[1]
theta0[3]
theta0[4]
Vtheta=theta0[1]*L1+theta0[3]*L3+theta0[4]*L4
L=cbind(vec(L1),vec(L3),vec(L4))
varbeta=constbetahat(k,c0)*
solve(t(X)%*%solve(Vtheta)%*%X)
varbetaCopt=constbetahat(k,c0)*
solve(t(X)%*%X) %*% t(X) %*% Vtheta %*% X %*% solve(t(X)%*%X)
varbetaCopt
varbeta
varbeta/200
vartheta=(2*sigma1(k,c0)*
solve(t(L)%*%(solve(Vtheta)%x%solve(Vtheta))%*%L)+
sigma2(k,c0)*theta%*%t(theta))
# Expression from Copt & Victoria-Feser (2006)
varthetaCopt=2*sigma1(k,c0)*
solve((t(L)%*%L))%*%t(L)%*%(Vtheta%x%Vtheta)%*%L%*%solve((t(L)%*%L))+
sigma2(k,c0)*theta%*%t(theta)
(2*sigma1(k,c0)*solve(t(L)%*%(solve(Vtheta)%x%solve(Vtheta))%*%L)
2*sigma1(k,c0)*solve(t(L)%*%(solve(Vtheta)%x%solve(Vtheta))%*%L)
2*sigma1(k,c0)*
solve((t(L)%*%L))%*%t(L)%*%(Vtheta%x%Vtheta)%*%L%*%solve((t(L)%*%L))
Vtheta=theta0[1]*L1+theta0[2]*L2+theta0[3]*L3+theta0[4]*L4
L=cbind(vec(L1),vec(L2),vec(L3),vec(L4))
varbeta=constbetahat(k,c0)*
solve(t(X)%*%solve(Vtheta)%*%X)
varbetaCopt=constbetahat(k,c0)*
solve(t(X)%*%X) %*% t(X) %*% Vtheta %*% X %*% solve(t(X)%*%X)
varbeta/200
2*sigma1(k,c0)*solve(t(L)%*%(solve(Vtheta)%x%solve(Vtheta))%*%L)
# Expression from Copt & Victoria-Feser (2006)
2*sigma1(k,c0)*
solve((t(L)%*%L))%*%t(L)%*%(Vtheta%x%Vtheta)%*%L%*%solve((t(L)%*%L))
Vtheta=theta0[1]*L1+0*L2+theta0[3]*L3+theta0[4]*L4
L=cbind(vec(L1),vec(L3),vec(L4))
varbeta=constbetahat(k,c0)*
solve(t(X)%*%solve(Vtheta)%*%X)
varbetaCopt=constbetahat(k,c0)*
solve(t(X)%*%X) %*% t(X) %*% Vtheta %*% X %*% solve(t(X)%*%X)
varbeta/200
2*sigma1(k,c0)*solve(t(L)%*%(solve(Vtheta)%x%solve(Vtheta))%*%L)
# Expression from Copt & Victoria-Feser (2006)
2*sigma1(k,c0)*
solve((t(L)%*%L))%*%t(L)%*%(Vtheta%x%Vtheta)%*%L%*%solve((t(L)%*%L))
AVEbetaMLE=apply(MLESMM$MLE$beta,MARGIN=2,FUN=mean)
AVEvarbetaMLE=Reduce('+',MLESMM$MLE$varbeta)/nrep
qbeta1=seq(qnorm(0.001,mean=beta0[1],sd=sqrt(AVEvarbetaMLE[1,1])),
qnorm(0.999,mean=beta0[1],sd=sqrt(AVEvarbetaMLE[1,1])),
length=100)
qbeta2=seq(qnorm(0.001,mean=beta0[2],sd=sqrt(AVEvarbetaMLE[2,2]/n)),
qnorm(0.999,mean=beta0[2],sd=sqrt(AVEvarbetaMLE[2,2]/n)),
length=100)
xmin=min(qbeta1,MLESMM$MLE$beta[,1])
xmax=max(qbeta1,MLESMM$MLE$beta[,1])
ymin=min(qbeta2,MLESMM$MLE$beta[,2])
ymax=max(qbeta2,MLESMM$MLE$beta[,2])
beta1=seq(xmin,xmax,length=100)
beta2=seq(ymin,ymax,length=100)
zbetaEmpirical=matrix(0,nrow=length(beta1),ncol=length(beta2))
for (s in 1:length(beta1)){
for (t in 1:length(beta2)){
betavec=c(beta1[s],beta2[t])
zbetaEmpirical[s,t]=
mahalanobis(betavec,center = AVEbetaMLE,cov = AVEvarbetaMLE)
}
}
plot(MLESMM$MLE$beta[,1],MLESMM$MLE$beta[,2],
xlab="Beta 1",ylab="Beta 2",
main="",
xlim=c(xmin,xmax),
ylim=c(ymin,ymax))
contour(beta1,beta2,zbetaEmpirical,
levels = qchisq(0.95,df=length(beta0)),add=TRUE,
drawlabels = FALSE,col="orange",lwd=2)
points(250,10,pch=16,col="orange")
MLESMM$MLE$varbeta
AVEbetaMLE=apply(MLESMM$MLE$beta,MARGIN=2,FUN=mean)
AVEvarbetaMLE=Reduce('+',MLESMM$MLE$varbeta)/nrep
AVEbetaMLE
points(AVEbetaMLE[1],AVEbetaMLE[2],pch=16,col="red")
X
AVEvarbetaMLE
MLESMM$MLE$beta
cov.wt(MLESMM$MLE$beta)$cov
AVEvarbetaMLE
X = list()          # list of design matrices for each individual
x1 = rep(1,k)       # first column of design matrix X
x2 = seq(0,k-1,1)   # second column of design matrix X
Zmat = cbind(x1,x2) # design matrix Z of vector of random effects
Z=list(Zmat)        # Creating list for Roblme
# preparing X-list for Roblme
for (i in (1:n)){
X[[i]] <- cbind(x1,x2)
}
X
X=cbind(x1,x2)
X=cbind(x1,x2)
Z = cbind(x1,x2)
# Setting up linear representation of V
Sigma1=matrix(c(1,0,0,0),ncol=2)  # corresponds to var(b1)
Sigma2=matrix(c(0,1,1,0),ncol=2)  # corresponds to covar(b1,b2)
Sigma3=matrix(c(0,0,0,1),ncol=2)  # corresponds to var(b2)
L1=Z%*%Sigma1%*%t(Z)          # term in V from var(b1)
L2=Z%*%Sigma2%*%t(Z)          # term in V from covar(b1,b2)
L3=Z%*%Sigma3%*%t(Z)          # term in V from var(b21)
L4=diag(1,k)                        # term in V from var(epsilon)
MLESMM$MLE$theta
theta0
Vtheta=theta0[1]*L1+0*L2+theta0[3]*L3+theta0[4]*L4
X=cbind(x1,x2)
Z = cbind(x1,x2)
# Setting up linear representation of V
Sigma1=matrix(c(1,0,0,0),ncol=2)  # corresponds to var(b1)
Sigma2=matrix(c(0,1,1,0),ncol=2)  # corresponds to covar(b1,b2)
Sigma3=matrix(c(0,0,0,1),ncol=2)  # corresponds to var(b2)
L1=Z%*%Sigma1%*%t(Z)          # term in V from var(b1)
L2=Z%*%Sigma2%*%t(Z)          # term in V from covar(b1,b2)
L3=Z%*%Sigma3%*%t(Z)          # term in V from var(b21)
L4=diag(1,k)                        # term in V from var(epsilon)
Vtheta=theta0[1]*L1+0*L2+theta0[3]*L3+theta0[4]*L4
Vtheta=theta0[1]*L1+theta0[2]*L2+theta0[3]*L3+theta0[4]*L4
L=cbind(vec(L1),vec(L2),vec(L3),vec(L4))
varbeta=constbetahat(k,c0)*solve(t(X)%*%solve(Vtheta)%*%X)
varbeta
varbeta/200
AVEvarbetaMLE
cov.wt(MLESMM$MLE$beta)$cov
dat$Y
summaryMLE = Roblme(dat$Y,dat$X,dat$Z,E=NULL,L=dat$L,
rho="MLE",rhoMM=NULL,eps=1e-5,maxiter=100,eff=0.95,V0=NULL)
summaryMLE$varbetaShat
summaryS = Roblme(dat$Y,dat$X,dat$Z,E=NULL,L=dat$L,
rho="biweight",rhoMM=NULL,eps=1e-5,maxiter=100,eff=0.95,V0=NULL)
summaryS$varbetaShat
AVEvarbetaMLE
cov.wt(MLESMM$MLE$beta)$cov
summaryS$varbetaShat/summaryS$varbetaShat
summaryS$varbetaShat/summaryMLE$varbetaShat
constbetahat(k,c0)
summaryS$varbetaShat/summaryMLE$varbetaShat
summaryMLE$fixedeffectsS[,1]
summaryMLE$summarythetaS[,1]
summaryMLE$varbetaShat
summaryS$fixedeffectsS[,1]
summaryS$summarythetaS[,1]
summaryS$varbetaShat
AVEvarbetaMLE
MLESMM$MLE$varbeta
AVEvarbetaMLE
varbeta/200
X
Z
Sigma1=matrix(c(1,0,0,0),ncol=2)  # corresponds to var(b1)
Sigma2=matrix(c(0,1,1,0),ncol=2)  # corresponds to covar(b1,b2)
Sigma3=matrix(c(0,0,0,1),ncol=2)  # corresponds to var(b2)
L1=Z%*%Sigma1%*%t(Z)          # term in V from var(b1)
L2=Z%*%Sigma2%*%t(Z)          # term in V from covar(b1,b2)
L3=Z%*%Sigma3%*%t(Z)          # term in V from var(b21)
L4=diag(1,k)                        # term in V from var(epsilon)
theta0
Vtheta=theta0[1]*L1+theta0[2]*L2+theta0[3]*L3+theta0[4]*L4
varbeta=constbetahat(k,c0)*solve(t(X)%*%solve(Vtheta)%*%X)
varbeta/200
AVEvarbetaMLE
AVEvarbetaS=Reduce('+',MLESMM$S$varbeta)/nrep
AVEvarbetaS
constbetahat(k,c0)
AVEvarbetaMLE
solve(t(X)%*%solve(Vtheta)%*%X)
solve(t(X)%*%solve(Vtheta)%*%X)/200
AVEvarbetaMLE
cov.wt(MLESMM$MLE$beta)$cov
varbeta/200
AVEvarbetaS
cov.wt(MLESMM$S$beta)$cov
robustvarComp
robvarComp
varComprob
robustvarComp:::varComprob.fit
robustvarComp:::varComprob.S
robustvarComp:::doSstep
